"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq";
exports.ids = ["vendor-chunks/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/stores/doc/in_memory.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/stores/doc/in_memory.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InMemoryDocstore: () => (/* reexport safe */ langchain_stores_doc_in_memory__WEBPACK_IMPORTED_MODULE_0__.InMemoryDocstore),\n/* harmony export */   SynchronousInMemoryDocstore: () => (/* reexport safe */ langchain_stores_doc_in_memory__WEBPACK_IMPORTED_MODULE_0__.SynchronousInMemoryDocstore)\n/* harmony export */ });\n/* harmony import */ var langchain_stores_doc_in_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! langchain/stores/doc/in_memory */ \"(rsc)/./node_modules/.pnpm/langchain@0.2.16_@aws-sdk+client-s3@3.631.0_@aws-sdk+credential-provider-node@3.631.0_@aws-sd_uhe6eexvv2imtoiz265ybd7qcm/node_modules/langchain/stores/doc/in_memory.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitjb21tdW5pdHlAMC4yLjI3X0Bhd3MtY3J5cHRvK3NoYTI1Ni1qc0A1LjIuMF9AYXdzLXNkaytjbGllbnQtczNAMy42MzEuMF9AYXdzLXNkaytjX3R1cGUycTRuNG50M3pncW50bGo0NWNyaGxxL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L3N0b3Jlcy9kb2MvaW5fbWVtb3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BtYXJibGlzbS9uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitjb21tdW5pdHlAMC4yLjI3X0Bhd3MtY3J5cHRvK3NoYTI1Ni1qc0A1LjIuMF9AYXdzLXNkaytjbGllbnQtczNAMy42MzEuMF9AYXdzLXNkaytjX3R1cGUycTRuNG50M3pncW50bGo0NWNyaGxxL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L3N0b3Jlcy9kb2MvaW5fbWVtb3J5LmpzP2I4NDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcImxhbmdjaGFpbi9zdG9yZXMvZG9jL2luX21lbW9yeVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/stores/doc/in_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/vectorstores/hnswlib.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/vectorstores/hnswlib.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HNSWLib: () => (/* binding */ HNSWLib)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/vectorstores */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.24_langchain@0.2.16_@aws-sdk+client-s3@3.631.0_@aws-sdk+credential-provid_jdkqunlxzs4ayndfejh3gvjdqe/node_modules/@langchain/core/vectorstores.js\");\n/* harmony import */ var _langchain_core_documents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/documents */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.24_langchain@0.2.16_@aws-sdk+client-s3@3.631.0_@aws-sdk+credential-provid_jdkqunlxzs4ayndfejh3gvjdqe/node_modules/@langchain/core/documents.js\");\n/* harmony import */ var _stores_doc_in_memory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stores/doc/in_memory.js */ \"(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/stores/doc/in_memory.js\");\n\n\n\n/**\n * Class that implements a vector store using Hierarchical Navigable Small\n * World (HNSW) graphs. It extends the SaveableVectorStore class and\n * provides methods for adding documents and vectors, performing\n * similarity searches, and saving and loading the vector store.\n */\nclass HNSWLib extends _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_0__.SaveableVectorStore {\n    _vectorstoreType() {\n        return \"hnswlib\";\n    }\n    constructor(embeddings, args) {\n        super(embeddings, args);\n        Object.defineProperty(this, \"_index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._index = args.index;\n        this.args = args;\n        this.embeddings = embeddings;\n        this.docstore = args?.docstore ?? new _stores_doc_in_memory_js__WEBPACK_IMPORTED_MODULE_2__.SynchronousInMemoryDocstore();\n    }\n    /**\n     * Method to add documents to the vector store. It first converts the\n     * documents to vectors using the embeddings, then adds the vectors to the\n     * vector store.\n     * @param documents The documents to be added to the vector store.\n     * @returns A Promise that resolves when the documents have been added.\n     */\n    async addDocuments(documents) {\n        const texts = documents.map(({ pageContent }) => pageContent);\n        return this.addVectors(await this.embeddings.embedDocuments(texts), documents);\n    }\n    static async getHierarchicalNSW(args) {\n        const { HierarchicalNSW } = await HNSWLib.imports();\n        if (!args.space) {\n            throw new Error(\"hnswlib-node requires a space argument\");\n        }\n        if (args.numDimensions === undefined) {\n            throw new Error(\"hnswlib-node requires a numDimensions argument\");\n        }\n        return new HierarchicalNSW(args.space, args.numDimensions);\n    }\n    async initIndex(vectors) {\n        if (!this._index) {\n            if (this.args.numDimensions === undefined) {\n                this.args.numDimensions = vectors[0].length;\n            }\n            this.index = await HNSWLib.getHierarchicalNSW(this.args);\n        }\n        if (!this.index.getCurrentCount()) {\n            this.index.initIndex(vectors.length);\n        }\n    }\n    get index() {\n        if (!this._index) {\n            throw new Error(\"Vector store not initialised yet. Try calling `addTexts` first.\");\n        }\n        return this._index;\n    }\n    set index(index) {\n        this._index = index;\n    }\n    /**\n     * Method to add vectors to the vector store. It first initializes the\n     * index if it hasn't been initialized yet, then adds the vectors to the\n     * index and the documents to the document store.\n     * @param vectors The vectors to be added to the vector store.\n     * @param documents The documents corresponding to the vectors.\n     * @returns A Promise that resolves when the vectors and documents have been added.\n     */\n    async addVectors(vectors, documents) {\n        if (vectors.length === 0) {\n            return;\n        }\n        await this.initIndex(vectors);\n        // TODO here we could optionally normalise the vectors to unit length\n        // so that dot product is equivalent to cosine similarity, like this\n        // https://github.com/nmslib/hnswlib/issues/384#issuecomment-1155737730\n        // While we only support OpenAI embeddings this isn't necessary\n        if (vectors.length !== documents.length) {\n            throw new Error(`Vectors and metadatas must have the same length`);\n        }\n        if (vectors[0].length !== this.args.numDimensions) {\n            throw new Error(`Vectors must have the same length as the number of dimensions (${this.args.numDimensions})`);\n        }\n        const capacity = this.index.getMaxElements();\n        const needed = this.index.getCurrentCount() + vectors.length;\n        if (needed > capacity) {\n            this.index.resizeIndex(needed);\n        }\n        const docstoreSize = this.index.getCurrentCount();\n        const toSave = {};\n        for (let i = 0; i < vectors.length; i += 1) {\n            this.index.addPoint(vectors[i], docstoreSize + i);\n            toSave[docstoreSize + i] = documents[i];\n        }\n        this.docstore.add(toSave);\n    }\n    /**\n     * Method to perform a similarity search in the vector store using a query\n     * vector. It returns the k most similar documents along with their\n     * similarity scores. An optional filter function can be provided to\n     * filter the documents.\n     * @param query The query vector.\n     * @param k The number of most similar documents to return.\n     * @param filter An optional filter function to filter the documents.\n     * @returns A Promise that resolves to an array of tuples, where each tuple contains a document and its similarity score.\n     */\n    async similaritySearchVectorWithScore(query, k, filter) {\n        if (this.args.numDimensions && !this._index) {\n            await this.initIndex([[]]);\n        }\n        if (query.length !== this.args.numDimensions) {\n            throw new Error(`Query vector must have the same length as the number of dimensions (${this.args.numDimensions})`);\n        }\n        if (k > this.index.getCurrentCount()) {\n            const total = this.index.getCurrentCount();\n            console.warn(`k (${k}) is greater than the number of elements in the index (${total}), setting k to ${total}`);\n            // eslint-disable-next-line no-param-reassign\n            k = total;\n        }\n        const filterFunction = (label) => {\n            if (!filter) {\n                return true;\n            }\n            const document = this.docstore.search(String(label));\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (typeof document !== \"string\") {\n                return filter(document);\n            }\n            return false;\n        };\n        const result = this.index.searchKnn(query, k, filter ? filterFunction : undefined);\n        return result.neighbors.map((docIndex, resultIndex) => [\n            this.docstore.search(String(docIndex)),\n            result.distances[resultIndex],\n        ]);\n    }\n    /**\n     * Method to delete the vector store from a directory. It deletes the\n     * hnswlib.index file, the docstore.json file, and the args.json file from\n     * the directory.\n     * @param params An object with a directory property that specifies the directory from which to delete the vector store.\n     * @returns A Promise that resolves when the vector store has been deleted.\n     */\n    async delete(params) {\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:fs/promises */ \"node:fs/promises\", 19));\n        const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:path */ \"node:path\", 19));\n        try {\n            await fs.access(path.join(params.directory, \"hnswlib.index\"));\n        }\n        catch (err) {\n            throw new Error(`Directory ${params.directory} does not contain a hnswlib.index file.`);\n        }\n        await Promise.all([\n            await fs.rm(path.join(params.directory, \"hnswlib.index\"), {\n                force: true,\n            }),\n            await fs.rm(path.join(params.directory, \"docstore.json\"), {\n                force: true,\n            }),\n            await fs.rm(path.join(params.directory, \"args.json\"), { force: true }),\n        ]);\n    }\n    /**\n     * Method to save the vector store to a directory. It saves the HNSW\n     * index, the arguments, and the document store to the directory.\n     * @param directory The directory to which to save the vector store.\n     * @returns A Promise that resolves when the vector store has been saved.\n     */\n    async save(directory) {\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:fs/promises */ \"node:fs/promises\", 19));\n        const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:path */ \"node:path\", 19));\n        await fs.mkdir(directory, { recursive: true });\n        await Promise.all([\n            this.index.writeIndex(path.join(directory, \"hnswlib.index\")),\n            await fs.writeFile(path.join(directory, \"args.json\"), JSON.stringify(this.args)),\n            await fs.writeFile(path.join(directory, \"docstore.json\"), JSON.stringify(Array.from(this.docstore._docs.entries()))),\n        ]);\n    }\n    /**\n     * Static method to load a vector store from a directory. It reads the\n     * HNSW index, the arguments, and the document store from the directory,\n     * then creates a new HNSWLib instance with these values.\n     * @param directory The directory from which to load the vector store.\n     * @param embeddings The embeddings to be used by the HNSWLib instance.\n     * @returns A Promise that resolves to a new HNSWLib instance.\n     */\n    static async load(directory, embeddings) {\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:fs/promises */ \"node:fs/promises\", 19));\n        const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:path */ \"node:path\", 19));\n        const args = JSON.parse(await fs.readFile(path.join(directory, \"args.json\"), \"utf8\"));\n        const index = await HNSWLib.getHierarchicalNSW(args);\n        const [docstoreFiles] = await Promise.all([\n            fs\n                .readFile(path.join(directory, \"docstore.json\"), \"utf8\")\n                .then(JSON.parse),\n            index.readIndex(path.join(directory, \"hnswlib.index\")),\n        ]);\n        args.docstore = new _stores_doc_in_memory_js__WEBPACK_IMPORTED_MODULE_2__.SynchronousInMemoryDocstore(new Map(docstoreFiles));\n        args.index = index;\n        return new HNSWLib(embeddings, args);\n    }\n    /**\n     * Static method to create a new HNSWLib instance from texts and metadata.\n     * It creates a new Document instance for each text and metadata, then\n     * calls the fromDocuments method to create the HNSWLib instance.\n     * @param texts The texts to be used to create the documents.\n     * @param metadatas The metadata to be used to create the documents.\n     * @param embeddings The embeddings to be used by the HNSWLib instance.\n     * @param dbConfig An optional configuration object for the document store.\n     * @returns A Promise that resolves to a new HNSWLib instance.\n     */\n    static async fromTexts(texts, metadatas, embeddings, dbConfig) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_1__.Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return HNSWLib.fromDocuments(docs, embeddings, dbConfig);\n    }\n    /**\n     * Static method to create a new HNSWLib instance from documents. It\n     * creates a new HNSWLib instance, adds the documents to it, then returns\n     * the instance.\n     * @param docs The documents to be added to the HNSWLib instance.\n     * @param embeddings The embeddings to be used by the HNSWLib instance.\n     * @param dbConfig An optional configuration object for the document store.\n     * @returns A Promise that resolves to a new HNSWLib instance.\n     */\n    static async fromDocuments(docs, embeddings, dbConfig) {\n        const args = {\n            docstore: dbConfig?.docstore,\n            space: \"cosine\",\n        };\n        const instance = new this(embeddings, args);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n    static async imports() {\n        try {\n            const { default: { HierarchicalNSW }, } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! hnswlib-node */ \"hnswlib-node\", 19));\n            return { HierarchicalNSW };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (err) {\n            throw new Error(`Could not import hnswlib-node. Please install hnswlib-node as a dependency with, e.g. \\`npm install -S hnswlib-node\\`.\\n\\nError: ${err?.message}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/vectorstores/hnswlib.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/vectorstores/hnswlib.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/vectorstores/hnswlib.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HNSWLib: () => (/* reexport safe */ _dist_vectorstores_hnswlib_js__WEBPACK_IMPORTED_MODULE_0__.HNSWLib)
/* harmony export */ });
/* harmony import */ var _dist_vectorstores_hnswlib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/vectorstores/hnswlib.js */ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.27_@aws-crypto+sha256-js@5.2.0_@aws-sdk+client-s3@3.631.0_@aws-sdk+c_tupe2q4n4nt3zgqntlj45crhlq/node_modules/@langchain/community/dist/vectorstores/hnswlib.js");


/***/ })

};
;